/**
 * Products API
 * Basic products API service ;)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { CreateProductRequest } from '../models';
import { GetProductResponse } from '../models';
/**
 * ProductsApi - axios parameter creator
 * @export
 */
export declare const ProductsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a new product
     * @param {CreateProductRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createProduct: (body: CreateProductRequest, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Retrieve a single product
     * @param {string} productID Unique id representing a product
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProduct: (productID: string, options?: any) => Promise<RequestArgs>;
};
/**
 * ProductsApi - functional programming interface
 * @export
 */
export declare const ProductsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a new product
     * @param {CreateProductRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createProduct(body: CreateProductRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateProductRequest>>;
    /**
     *
     * @summary Retrieve a single product
     * @param {string} productID Unique id representing a product
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProduct(productID: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetProductResponse>>;
};
/**
 * ProductsApi - factory interface
 * @export
 */
export declare const ProductsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create a new product
     * @param {CreateProductRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createProduct(body: CreateProductRequest, options?: any): AxiosPromise<CreateProductRequest>;
    /**
     *
     * @summary Retrieve a single product
     * @param {string} productID Unique id representing a product
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProduct(productID: string, options?: any): AxiosPromise<GetProductResponse>;
};
/**
 * ProductsApi - object-oriented interface
 * @export
 * @class ProductsApi
 * @extends {BaseAPI}
 */
export declare class ProductsApi extends BaseAPI {
    /**
     *
     * @summary Create a new product
     * @param {CreateProductRequest} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductsApi
     */
    createProduct(body: CreateProductRequest, options?: any): Promise<import("axios").AxiosResponse<CreateProductRequest>>;
    /**
     *
     * @summary Retrieve a single product
     * @param {string} productID Unique id representing a product
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductsApi
     */
    getProduct(productID: string, options?: any): Promise<import("axios").AxiosResponse<GetProductResponse>>;
}
